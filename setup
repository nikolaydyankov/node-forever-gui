#!/bin/bash

Check for administrator user
if [ `id -u` != 0 ]; then
	echo "Run with administrator user (sudo)"
	exit 1;
fi

APPNAME="Forever GUI"
APPFOLDER="forever-gui"
APPMODULESFOLDER="app_modules"
NODEINSTALLPATH="/usr/local/lib/node_modules"
CONFIGFILE="config.json"
ACCOUNTSFILE="accounts.json"

S="   "
L="$S =============================================================="
SCRIPT="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

function md5it {
	if builtin command -v md5 > /dev/null; then
		echo "$1" | md5
	elif builtin command -v md5sum > /dev/null ; then
		echo "$1" | md5sum | awk '{print $1}'
	else
		rvm_error "Neither md5 nor md5sum were found in the PATH"
		return 1
	fi

	return 0
}

function PromptDomain {
	while true; do
		read -p "$S Specify domain (without http://) or IP: " DOMAIN

		# Removed because some servers may use only IP
		# 
		# validDomain=`echo $DOMAIN | egrep "([a-z0-9_-]+)\.([a-zA-Z\.]){2,7}"`
		# if [ ! -z "$validDomain" ]; then
		# 	break;
		
		if [ ! -z "$DOMAIN" ]; then
			break;
		else
			echo ""
			echo "$S Please write a valid domain"
			echo ""
		fi
	done
}

function PromptPort {
	while true; do
		read -p "$S Specify port for $DOMAIN [443]: " PORT

		portRegex='^[0-9]{2,5}$'
		if [[ $PORT =~ $portRegex ]]; then
			break;
		else
			PORT=443
			echo "$S Port is set to $PORT because specified port is not matching the pattern [0-9]{2,5}"
			break;
		fi
	done
}

function PromptUsername {
	while true; do
		read -p "$S Specify Administrator username: " ADMIN_USER

		loginRegex='^[a-zA-Z0-9_-]{5,16}$'
		if [[ $ADMIN_USER =~ $loginRegex ]]; then
			break;
		else
			echo ""
			echo "$S Please use a proper username"
			echo "$S Accepted characters: [a-zA-Z0-9_-] and length between 5 and 16 symbols"
			echo ""
		fi
	done
}

function PromptPassword {
	while true; do
		read -s -p "$S Specify Administrator password: " ADMIN_PASS

		validPass=`echo "$ADMIN_PASS" | egrep "[a-z]" | egrep "[A-Z]" | egrep "([a-zA-Z0-9@#-_$]){6,100}"`
		
		if [ ! -z "$validPass" ]; then
			echo ""
			break;
		else
			echo ""
			echo "$S Please use stronger password."
			echo "$S Required at least one lower case letter [a-z], at least one upper case [A-Z] letter."
			echo "$S Accepted characters: a-zA-Z0-9@#-_$"
			echo ""
		fi
	done

	# Prompt for Repeat Password
	while true; do
		read -s -p "$S Repeat password: " ADMIN_PASS2

		if [ $ADMIN_PASS = $ADMIN_PASS2 ]; then
			echo ""
			break;
		else
			echo ""
			echo "$S Passwords do not match"
			echo ""

			PromptPassword
			break;
		fi
	done

}

function SetupFiles {

	echo "$S Preparing for installation of app files"
	mkdir -p "$NODEINSTALLPATH" || { exit 1; }

	echo "$S Moving files to app directory"
	cp -R "$SCRIPT/$APPFOLDER" "$NODEINSTALLPATH/" || { exit 1; }

}

function SaveSettings {

	ENCRYPTED_PASS=$(md5it "$ADMIN_PASS")

	printf '{"domain":"%s","port":"%s"}' "$DOMAIN" "$PORT" > "$NODEINSTALLPATH/$APPFOLDER/$APPMODULESFOLDER/$CONFIGFILE"
	printf '{"%s":"%s"}' "$ADMIN_USER" "$ENCRYPTED_PASS" > "$NODEINSTALLPATH/$APPFOLDER/$APPMODULESFOLDER/$ACCOUNTSFILE"
	
}

case "$1" in
	install)
			
			echo ""
			echo "$S Installaton of $APPNAME has started"
			echo ""
			echo "$L"
			echo ""

			PromptDomain

			PromptPort

			PromptUsername

			PromptPassword

			SetupFiles

			SaveSettings

			echo ""
			echo "$L"
			echo ""

			echo "$S The $APPNAME will be available at url https://$DOMAIN:$PORT"
			echo "$S You can login with username $ADMIN_USER and the specified password"
			echo ""

		;;

	help)

			echo "Help information [TODO]"
	
		;;

	*)

		echo "Usage: {install|help}"

	;;
esac